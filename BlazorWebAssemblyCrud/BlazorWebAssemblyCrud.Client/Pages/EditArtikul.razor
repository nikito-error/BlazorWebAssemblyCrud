@page "/edit-artikul"
@page "/edit-artikul/{id::int}"
@inject HttpClient Http
@inject NavigationManager NavigationManage
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender:false))

@if(Id == null)
{
	<h3> Add Artikul </h3>
}
else
{
	<h3> Edit @Art.ArtikulName </h3>
}
<EditForm Model="Art" OnSubmit="HandleSubmit">
    <div>
        <label for="name"> Name: </label>
        <InputText id="name" @bind-Value="Art.ArtikulName" class="form-control" />
    </div>

    <div>
        <label for="price"> Price: </label>
        <InputNumber id="price" @bind-Value="Art.ArtikulPrice" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary"> Save </button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    public Artikul Art { get; set; } = new Artikul();

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            try
            {
                var result = await Http.GetFromJsonAsync<Artikul>($"api/artikuls/{Id}");
                if (result is not null)
                {
                    Art = result;
                }
            }
            catch (Exception ex)
            {
                // Handle exception (e.g., log error, show error message)
            }
        }
    }

    async Task HandleSubmit()
    {
        try
        {
            if (Id is not null)
            {
                Art.ArtikulDate = DateTime.Now;
                var result = await Http.PutAsJsonAsync($"api/artikuls/{Id}", Art);
                result.EnsureSuccessStatusCode();
                Art = await result.Content.ReadFromJsonAsync<Artikul>();
            }
            else
            {
                Art.ArtikulDate = DateTime.Now;
                var result = await Http.PostAsJsonAsync("api/artikuls", Art);
                result.EnsureSuccessStatusCode();
                Art = await result.Content.ReadFromJsonAsync<Artikul>();
            }
            NavigationManage.NavigateTo("/artikuls");
        }
        catch (Exception ex)
        {
            // Handle exception (e.g., log error, show error message)
        }


    }
}